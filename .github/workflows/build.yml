name: SonarCloud
on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  checks: write
  contents: read
  actions: read
  packages: read
jobs:
  build:
    name: Build and analyze
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle
        uses: gradle/gradle-build-action@v2
      - name: Cache Android AVD
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29
      - name: Create Android AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Build and analyze on Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew build sonarqube --info
      - name: Move Android Test results
        run: |
          # Find the matching file
          file=$(find /Users/runner/work/open-realms/open-realms/app/build/outputs/androidTest-results/connected -name 'TEST-*.xml' -type f)

          # Extract the directory and filename
          directory=$(dirname "$file")
          filename=$(basename "$file")

          # Rename the file
          new_filename="TEST-androidTests.xml"
          mv "$file" "$directory/$new_filename"

          # Move the file to the desired location
          mv "$directory/$new_filename" /Users/runner/work/open-realms/open-realms/app/build/test-results/testDebugUnitTest/  

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        id: test-results
        if: always()
        with:
          files: "/Users/runner/work/open-realms/open-realms/app/build/test-results/testDebugUnitTest/TEST-*.xml"

      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for master branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'develop' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/develop'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.githubusercontent.com/{user}/{id}
          file: badge.svg
